package {	import com.edgarcai.alogic.*;	import com.edgarcai.util.*;	import fl.controls.*;	import flash.display.*;	import flash.events.*;	import flash.geom.*;	import flash.system.*;	import flash.text.*;	import ghostcat.display.movieclip.GBitmapMovieClip;	import ghostcat.util.display.GraphicsUtil;	import Utils.*;	public class Main extends Sprite	{		static public const EVTGETRESFINISHED:String = "getresfinsished";		private var _cfgPath:String = "assets/cfg.xml";		private var _xmlReader:XMLReader;		protected var coord:Coordinate;//坐标系		protected var decareMc:MovieClip;//容器		protected var touchMc:MovieClip;//触摸		protected var maskMc:MovieClip;//遮罩		protected var cartoonmc:MovieClip;//动画				private var _maxWid:Number = 0;		private var _maxHei:Number = 0;		private var _imgsrc:String = "";		private var _bigmap:BitmapData;		private var resloader:ResLoader;		private var _catoonArray:Array = [];		private var _singleSpr:GBitmapMovieClip;		private var curIndex:Number = 1;		public function Main():void		{			if (stage)			{				init();			}			else			{				addEventListener(Event.ADDED_TO_STAGE, init);			}		}		private function init(e:Event = null):void		{			if (e)			{				this.removeEventListener(Event.ADDED_TO_STAGE, init);			}			Security.allowDomain("*");			Security.allowInsecureDomain("*");						//读取配置文件			_xmlReader = new XMLReader(_cfgPath);			_xmlReader.addEventListener(XMLReader.EVTGETXMLCOMPLETED, getCfgFinshed);						coord = new Coordinate();			decareMc = new MovieClip();			touchMc = new MovieClip();			maskMc = new MovieClip();			cartoonmc = new MovieClip();			decareMc.x = decareMc.y = 200;//设定容器中心的位置			addChild(decareMc);						coord.Width = coord.Height = 1600;// 设定坐标系 Size			decareMc.addChild(coord);			touchMc.graphics.lineStyle(1, 0, 1);						//设定触摸范围;			touchMc.graphics.beginFill(0xeeeeee, 0.1);			touchMc.graphics.drawRect( -coord.Width / 2, -coord.Height / 2, coord.Width, coord.Height);			decareMc.addChild(touchMc);			maskMc.graphics.beginFill(0xeeeeee, 0.1);			//设定遮罩得范围;			maskMc.graphics.drawRect( -coord.Width / 2 - 1, -coord.Height / 2 - 1, coord.Width + 2, coord.Height + 2);			decareMc.addChild(maskMc);			decareMc.mask = maskMc;			//添加动画			decareMc.addChild(cartoonmc);			/// 添加事件			touchMc.addEventListener(MouseEvent.MOUSE_DOWN, _onMouseDown);			touchMc.addEventListener(MouseEvent.MOUSE_UP, _onMouseUp);			touchMc.addEventListener(MouseEvent.MOUSE_OUT, _onMouseOut);						this.addEventListener(Main.EVTGETRESFINISHED, setCartoonPanel);		}				//设置动画面板		private function setCartoonPanel(e:Event):void 		{			trace("开始配置动画面板");			curIndex = 0;			_singleSpr = new GBitmapMovieClip(_catoonArray, null,true);			_singleSpr.frameRate = 30;			//获取碰撞区域			var hitArea:Rectangle = BitmapData(_catoonArray[0]).getColorBoundsRect(0xFF000000,0x00000000,false);			//消息			var textfield:TextField = new TextField();			textfield.name = "message";			var string:String = "第" + "1/" + (_catoonArray.length) + "张" + ",尺寸:(" + _maxWid + "," + _maxHei;			string += "),碰撞区域 point:("+hitArea.x+","+hitArea.y+"),size:("+hitArea.width+","+hitArea.height+")";			textfield.text = string;			textfield.autoSize = TextFieldAutoSize.NONE; 			textfield.wordWrap = true;			textfield.multiline = true;			textfield.mouseEnabled = false;			textfield.width = string.length*10;			textfield.x = _singleSpr.width / 2-textfield.textWidth/2;			textfield.y = _singleSpr.height+10;			cartoonmc.addChild(textfield);						//下一张按钮			var btnNext:Button = new Button();			btnNext.name = "btnNext";			btnNext.addEventListener(MouseEvent.CLICK, nextSetp);			btnNext.x = _singleSpr.width+5;			btnNext.y = 25;			btnNext.label =  "next";			btnNext.width = 50;			cartoonmc.addChild(btnNext);						//上一张按钮			var btnPrev:Button = new Button();			btnPrev.name = "btnPrv";			btnPrev.addEventListener(MouseEvent.CLICK, prevSetp);			btnPrev.x = _singleSpr.width+5;			btnPrev.y = btnNext.y - btnPrev.height-2;			btnPrev.label =  "prev";			btnPrev.width = 50;			cartoonmc.addChild(btnPrev);						//播放			var btnPlay:Button = new Button();			btnPlay.name = "btnPlay";			btnPlay.addEventListener(MouseEvent.CLICK, playStep);			btnPlay.x = _singleSpr.width+5;			btnPlay.y = _singleSpr.height- btnPlay.height;			btnPlay.label =  "play";			btnPlay.width = 50;			cartoonmc.addChild(btnPlay);						//暂停			var btnPlause:Button = new Button();			btnPlause.name = "btnPlause";			btnPlause.addEventListener(MouseEvent.CLICK, plauseStep);			btnPlause.x = _singleSpr.width+5;			btnPlause.y = btnPlay.y - btnPlause.height-2;			btnPlause.label =  "plause";			btnPlause.width = 50;			cartoonmc.addChild(btnPlause);						cartoonmc.addChild(_singleSpr);		}				private function plauseStep(e:MouseEvent):void 		{			_singleSpr.paused = true;			curIndex = _singleSpr.currentFrame;			var hitArea:Rectangle = BitmapData(_catoonArray[curIndex-1]).getColorBoundsRect(0xFF000000,0x00000000,false);			var string:String = "第" + (curIndex) + "/" + (_catoonArray.length + 1) + "张" + ",尺寸:" + _maxWid + "," + _maxHei;			string += "),碰撞区域 point:("+hitArea.x+","+hitArea.y+"),size:("+hitArea.width+","+hitArea.height+")";			TextField(cartoonmc.getChildByName("message")).text = string;		}				private function playStep(e:MouseEvent):void 		{			_singleSpr.paused = false;			curIndex = _singleSpr.currentFrame;			var hitArea:Rectangle = BitmapData(_catoonArray[curIndex-1]).getColorBoundsRect(0xFF000000,0x00000000,false);			var string:String = "第" + (curIndex) + "/" + (_catoonArray.length + 1) + "张" + ",尺寸:" + _maxWid + "," + _maxHei;			string += "),碰撞区域 point:(" + hitArea.x + "," + hitArea.y + "),size:(" + hitArea.width + "," + hitArea.height + ")";			TextField(cartoonmc.getChildByName("message")).text = string;		}				private function prevSetp(e:MouseEvent):void 		{			curIndex--;			//上一张			if (curIndex <= 0)			{				curIndex = _catoonArray.length;			}			_singleSpr.currentFrame = curIndex;			var hitArea:Rectangle = BitmapData(_catoonArray[curIndex-1]).getColorBoundsRect(0xFF000000,0x00000000,false);			var string:String = "第" + curIndex + "/" + (_catoonArray.length) + "张" + ",尺寸:" + _maxWid + "," + _maxHei;			string += "),碰撞区域 point:("+hitArea.x+","+hitArea.y+"),size:("+hitArea.width+","+hitArea.height+")";			TextField(cartoonmc.getChildByName("message")).text = string;					}				private function nextSetp(e:MouseEvent):void 		{			curIndex++;			if (curIndex >= _catoonArray.length)			{				curIndex = 1;			}			_singleSpr.currentFrame = curIndex;			//获取碰撞区域			var hitArea:Rectangle = BitmapData(_catoonArray[curIndex-1]).getColorBoundsRect(0xFF000000,0x00000000,false);			var string:String = "第" + (curIndex) + "/" + (_catoonArray.length) + "张" + ",尺寸:" + _maxWid + "," + _maxHei;			string += "),碰撞区域 point:("+hitArea.x+","+hitArea.y+"),size:("+hitArea.width+","+hitArea.height+")";			TextField(cartoonmc.getChildByName("message")).text = string;		}				private function getCfgFinshed(e:Event):void 		{			_maxWid = _xmlReader.getWidth();			_maxHei = _xmlReader.getHeight();			_imgsrc = _xmlReader.getIMG();			resloader = new ResLoader(_imgsrc);			resloader.addEventListener(ResLoader.EVTGETRESFINISH, getResFinished);			//添加背景			cartoonmc.graphics.clear();			cartoonmc.graphics.beginFill(0, 0.1);			cartoonmc.graphics.drawRect(0, 0, _xmlReader.getWidth(), _xmlReader.getHeight());			cartoonmc.graphics.endFill();						cartoonmc.x = 0;			cartoonmc.y = 0;			trace("配置文件读取完成,size:"+_maxWid+","+_maxHei+",src:"+_imgsrc);		}				private function getResFinished(e:Event):void 		{			_bigmap = resloader.getData();			trace("资源文件读取完成:" + _maxWid +","+_maxHei);			_catoonArray = displayHelper.separateBitmapData(_bigmap, _maxWid, _maxHei, false);			dispatchEvent(new Event(Main.EVTGETRESFINISHED));		}		private function _onMouseDown(e:MouseEvent):void		{			touchMc.addEventListener(MouseEvent.MOUSE_MOVE, _onMouseMove);		}		private function _onMouseUp(e:MouseEvent):void		{			touchMc.removeEventListener(MouseEvent.MOUSE_MOVE, _onMouseMove);			coord.stopDrag();			coord.Update();		}		private function _onMouseOut(e:MouseEvent):void		{			_onMouseUp(e);		}		private function _onMouseMove(e:MouseEvent):void		{			coord.startDrag();			coord.Update();			e.updateAfterEvent();		}	}}